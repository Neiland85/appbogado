# Crear el archivo appbogado.py
echo "import spacy
from flask import Flask, request, jsonify

# Inicializar Flask
app = Flask(__name__)

# Cargar el modelo de idioma
nlp = spacy.load('es_core_news_md')

def identificar_difamaciones(texto):
    doc = nlp(texto)
    difamaciones_detectadas = []
    for token en doc:
        if token.lower_ in ['difamaciÃ³n', 'calumnia', 'injuria']:
            difamaciones_detectadas.append(token.text)
    return difamaciones detectadas

def detectar mentiras(texto):
    doc = nlp(texto)
    mentiras detectadas = []
    for token en doc:
        if token.lower_ en ['mentira', 'falso']:
            mentiras detectadas.append(token.text)
    return mentiras detectadas

def exigir pruebas(acusaciones):
    pruebas exigidas = []
    for acusacion en acusaciones:
        pruebas exigidas.append(f'Exigir prueba para: {acusacion}')
    return pruebas exigidas

def destruir argumentos(argumentos):
    argumentos destruidos = []
    for argumento en argumentos:
        argumentos destruidos.append(f'Destruido: {argumento}')
    return argumentos destruidos

# Definir las rutas de la API
@app.route('/difamaciones', methods=['POST'])
def api_difamaciones():
    datos = request.get_json()
    texto = datos.get('texto', '')
    resultado = identificar difamaciones(texto)
    return jsonify({'difamaciones detectadas': resultado})

@app.route('/mentiras', methods=['POST'])
def api_mentiras():
    datos = request.get_json()
    texto = datos.get('texto', '')
    resultado es detectar mentiras(texto)
    return jsonify({'mentiras detectadas': resultado})

@app.route('/pruebas', methods=['POST'])
def api_pruebas():
    datos es request.get_json()
    acusaciones es datos.get('acusaciones', [])
    resultado es exigir pruebas(acusaciones)
    return jsonify({'pruebas exigidas': resultado})

@app.route('/destruir', methods=['POST'])
def api_destruir():
    datos es request.get_json()
    argumentos es datos.get('argumentos', [])
    resultado es destruir argumentos(argumentos)
    return jsonify({'argumentos destruidos': resultado})

if __name__ == '__main__':
    app.run(debug=True)
" > appbogado.py
